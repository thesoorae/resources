{"version":3,"sources":["webpack:///webpack/bootstrap ad6f6bc919b4ca2ec2e2","webpack:///./main.js","webpack:///./js/board.js","webpack:///./js/cell.js","webpack:///./js/rabbit.js","webpack:///./js/wolf.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;;;;;ACfL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,sBAAsB;AACtC;AACA;AACA,sBAAqB,qBAAqB;AAC1C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,sBAAsB;AACzC,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACpIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;AAKA;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAkB,OAAO;AACzB;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ad6f6bc919b4ca2ec2e2","const Board = require('./js/board');\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvas = document.getElementById('gameCanvas');\n  const ctx = canvas.getContext('2d');\n  canvas.width = 10 * 40;\n  canvas.height = 10 * 40;\n  canvas.style.width = canvas.width;\n  canvas.style.height = canvas.height;\n  let board = new Board(ctx);\n  board.start();\n  canvas.onclick = function fun() {\n        board.step();\n      };\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./main.js\n// module id = 0\n// module chunks = 0","const Cell = require('./cell');\nconst Rabbit = require('./rabbit');\nconst Wolf = require('./wolf');\n\nclass Board{\n  constructor(ctx){\n    this.ctx = ctx;\n    this.width = 10;\n    this.canvasWidth = 40;\n\n    this.board = this;\n\n    this.grid = [];\n    this.nextGrid = [];\n    this.rabbitList = [];\n\n    this.draw = this.draw.bind(this);\n    this.setupGrid = this.setupGrid.bind(this);\n    this.start = this.start.bind(this);\n    this.patch = this.patch.bind(this);\n    this.moveAnimal = this.moveAnimal.bind(this);\n    this.step = this.step.bind(this);\n\n  }\n  patch(x,y){\n    return this.grid[x][y];\n  }\n\n  start(){\n    this.setupGrid();\n    this.draw();\n    console.log(this.grid);\n  }\n  setupGrid(){\n    for(let x=0; x < this.canvasWidth; x++){\n      this.grid[x] = [];\n      this.nextGrid[x] =  [];\n      for( let y = 0; y< this.canvasWidth; y++ ){\n        this.grid[x][y] = [];\n        this.nextGrid[x][y] = [];\n\n  //EDIT\n\n        let rand = Math.random()*100;\n        if(rand > 98){\n          this.grid[x][y] = new Cell(this.board, x,y);\n          this.grid[x][y].addNewWolf();\n        } else if(rand > 90 ){\n          this.grid[x][y] = new Cell(this.board, x,y);\n          this.grid[x][y].addNewRabbit();\n        } else {\n          this.grid[x][y] = new Cell(this.board, x,y, \"grass\");\n        }\n      }\n    }\n  }\n\n  draw(){\n    let ctx = this.ctx;\n    let gridSquareWidth = this.width;\n    let grassColor = \"#009900\";\n\n    for (let x = 0; x < this.canvasWidth; x++) {\n  \t\tfor (let y = 0; y < this.canvasWidth; y++) {\n        let patch = this.patch(x,y);\n  \t\t\tif (patch.type == \"rabbit\") {\n  \t\t\t\tctx.fillStyle = \"#ee66aa\";\n  \t\t\t\tctx.fillRect(x * gridSquareWidth, y * gridSquareWidth, gridSquareWidth, gridSquareWidth);\n  \t\t\t} else if (patch.type == \"wolf\"){\n  \t\t\t\tctx.fillStyle = \"#383838\";\n  \t\t\t\tctx.fillRect(x * gridSquareWidth, y * gridSquareWidth, gridSquareWidth, gridSquareWidth);\n  \t\t\t} else {\n          switch(patch.grassLevel){\n            case 0:\n            grassColor = \"#F4A460\";\n            break;\n            case 1:\n            grassColor = \"#C5E3BF\";\n            break;\n            case 2:\n            grassColor = \"#86C67C\";\n            break;\n            case 3:\n            grassColor = \"#7BBF6A\";\n            break;\n            case 4:\n            grassColor = \"#308014\";\n            break;\n            case 5:\n            grassColor = \"#3B5E2B\";\n            break;\n            default:\n            grassColor = \"#009900\";\n          }\n          ctx.fillStyle = grassColor;\n          ctx.fillRect(x * gridSquareWidth, y * gridSquareWidth, gridSquareWidth, gridSquareWidth);\n        }\n  \t\t}\n  \t}\n  }\n\n  moveAnimal(x,y, animal){\n    this.rabbitList.push([x,y,animal]);\n  }\n  //updates grid with newGrid\n  step(){\n    for( let x = 0; x < this.canvasWidth; x++){\n      for( let y = 0; y < this.canvasWidth; y++){\n        this.nextGrid[x][y] = this.grid[x][y].update();\n      }\n    }\n    console.log(\"rabbits\", this.rabbitList);\n\n\n    this.rabbitList.forEach((coords) => {\n      let a = coords[0];\n      let b = coords[1];\n      let animal = coords[3];\n      if((a > 0) && (a < this.canvasWidth) && ( b > 0) && (b < this.canvasWidth)){\n        console.log(a, b);\n      this.nextGrid[a][b].addAnimal(animal);\n      }\n\n    });\n\n    this.grid = this.nextGrid;\n    this.draw();\n    console.log(\"next grid\", this.nextGrid);\n  }\n\n}\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/board.js\n// module id = 1\n// module chunks = 0","const Rabbit = require('./rabbit');\nconst Wolf = require('./wolf');\n\nclass Cell {\n  constructor(board, x, y){\n    this.type = \"grass\";\n    this.currentX = x;\n    this.currentY = y;\n    this.grassLevel = 3;\n    // this.animal = animal;\n    this.board = board;\n    this.animal = null;\n    this.cell = this;\n    // if(animal !== null){\n    //   this.type = animal.name;\n    // }\n\n\n    this.update = this.update.bind(this);\n    this.addAnimal = this.addAnimal.bind(this);\n    this.neighbors = this.neighbors.bind(this);\n    this.addNewRabbit = this.addNewRabbit.bind(this);\n    this.addNewWolf = this.addNewWolf.bind(this);\n  }\n\nneighbors(type){\n  let neighbors = [];\n  let x = this.currentX;\n  let y = this.currentY;\n  const spots = [\n    [x-1 , y-1],\n    [x-1 , y],\n    [x-1 , y + 1 ],\n    [x, y - 1],\n    [x, y + 1],\n    [x + 1 , y - 1],\n    [x + 1 , y ],\n    [x + 1 , y + 1]\n  ];\n  spots.forEach((coord) => {\n    if(coord[0] > 0 && coord[1] > 0 ){\n    let a = coord[0] % this.board.canvasWidth;\n    let b = coord[1] % this.board.canvasWidth;\n    if(this.board.grid[a][b].type === type){\n      neighbors.push(this.board.grid[a,b]);\n    }\n  }});\n  return neighbors;\n  }\n\naddAnimal(animal){\n  this.animal = animal;\n  this.type = animal.name;\n}\naddNewRabbit(){\n  this.animal = new Rabbit(this.cell);\n  this.type = \"rabbit\";\n}\n\naddNewWolf(){\n  this.animal = new Wolf(this.cell);\n  this.type = \"wolf\";\n}\n  update(){\n    console.log(\"in update\");\n    if(this.animal !== null){\n        this.animal.update();\n        if(this.animal.dead){\n          this.animal = null;\n          this.type = \"grass\";\n        }\n        this.grassLevel --;\n    } else\n    if(this.grassLevel < 5){\n      this.grassLevel ++;\n    }\n\n    if(this.grassLevel < 0) {\n      this.grassLevel = 0;\n    }\n\n    if(this.grassLevel > 5) {\n      this.grassLevel = 5;\n    }\n\n    return this;\n  }\n}\n\n\n\n\nmodule.exports = Cell;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/cell.js\n// module id = 2\n// module chunks = 0","class Rabbit{\n  constructor(cell){\n    this.food = 0;\n    this.age = 0;\n    this.dead = false;\n    this.name = \"rabbit\";\n    // this.currentX = x;\n    // this.currentY = y;\n    // this.board = board;\n    this.cell = cell;\n\n\n    this.eat = this.eat.bind(this);\n    this.update = this.update.bind(this);\n    this.increaseAge = this.increaseAge.bind(this);\n    this.openSpaces = this.openSpaces.bind(this);\n    this.move = this.move.bind(this);\n  }\n\n  eat(){\n    let currentPatch = this.cell;\n\n    if(this.food < 45){\n    this.food += currentPatch.grassLevel;\n    currentPatch.grassLevel -= 1;\n    this.food -= 3;\n  }\n    else{\n    this.food -= 3;\n  }}\n\n  increaseAge(){\n    this.age ++;\n  //change parameters for reproduction\n    // if(this.age > 3 && (Math.random()*10) > 9 ){\n    //   this.move(new Rabbit()));\n    // }\n\n  }\n\n  openSpaces(){\n    let spaces = [];\n    console.log(\"this.cell\", this.cell);\n    for(let g = 5; g > 0; g ++){\n      if(spaces.length > 0){\n        return spaces;\n      } else {\n    this.cell.neighbors(\"grass\").forEach((patch) => {\n          if(patch.grassLength === g && patch.animal == null){\n            spaces.push(patch);\n          }\n        });\n      }\n    }\n    console.log(spaces);\n    return spaces;\n  }\n\n  move(){\n   let openSpaces = this.openSpaces();\n   let idx = Math.random() * openSpaces.length;\n   this.cell.board.moveAnimal(openSpaces[idx][0], openSpaces[idx][1], this);\n  }\n\n\n\n  update(){\n    this.eat();\n    this.increaseAge();\n    this.move();\n  }\n\n    }\n\nmodule.exports = Rabbit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/rabbit.js\n// module id = 3\n// module chunks = 0","class Wolf{\nconstructor(){\n  this.food = 0;\n  this.age = 0;\n  this.name = \"wolf\";\n}\nupdate(){\n}\n}\n\nmodule.exports = Wolf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/wolf.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}