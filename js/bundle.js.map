{"version":3,"sources":["webpack/bootstrap 632cfdb8d26c77c19fad","./js/main.js","./js/board.js","./js/cell.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;;AAGA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACPD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAgB,eAAe;AAC/B;AACA;AACA,sBAAqB,eAAe;AACpC;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,eAAe;AACjC,oBAAmB,gBAAgB;;AAEnC;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 632cfdb8d26c77c19fad","const Board = require('./board');\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvas = document.getElementById('gameCanvas');\n  const ctx = canvas.getContext('2d');\n  new Board(ctx).gameLoop();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/main.js\n// module id = 0\n// module chunks = 0","const Cell = require('./cell');\n\nconst gridWidth = 140;\nconst gridHeight = 70;\nconst gridSquareWidth = 10;\n\nclass Board {\n  constructor(ctx){\n    this.ctx = ctx;\n  }\n\n\n  setupGrid(){\n    console.log(\"in setup\");\n\n    this.ctx.width = gridWidth * gridSquareWidth;\n    this.ctx.height = gridHeight * gridSquareWidth;\n    this.ctx.style.width = this.ctx.width;\n    this.ctx.style.height = this.ctx.height;\n\n    let grid = [];\n    let grid2 = [];\n\n    for(let x=0; x < gridWidth; x++){\n      grid[x] = [];\n      grid2[x] =  [];\n      for( let y = 0; y< gridHeight; y++ ){\n        grid[x][y] = [];\n        grid2[x][y] = [];\n\n  //EDIT\n\n        let rand = Math.random()*100;\n        if(rand > 90){\n          grid[x][y] = new Cell(\"rabbit\", x,y);\n        } else if(rand > 98 ){\n          grid[x][y] = new Cell(\"wolf\", x,y);\n        } else {\n          grid[x][y] = new Cell(\"grass\", x,y);\n        }\n      }\n    }\n\n    }\n\n  update(dt) {\n    console.log(\"in update\");\n  \t// iterate simulation rules\n  \t// this.run();\n\n  \t// draw result\n  \tthis.draw();\n  }\n\n\n  draw() {\n    const ctx = this.ctx;\n    console.log(\"in draw\");\n  // clear canvas\n  \tctx.fillStyle = '#fee';\n  \tctx.fillRect(0, 0, ctx.width, ctx.height);\n\n  \tfor (var x = 0; x < gridWidth; x++) {\n  \t\tfor (var y = 0; y < gridHeight; y++) {\n\n  \t\t\tif (grid[x][y].type == \"rabbit\") {\n  \t\t\t\tctx.fillStyle = \"#ee66aa\";\n  \t\t\t\tctx.fillRect(x * gridSquareWidth, y * gridSquareWidth, gridSquareWidth, gridSquareWidth);\n  \t\t\t} else if (grid[x][y].type == \"wolf\") {\n  \t\t\t\tctx.fillStyle = \"#383838\";\n  \t\t\t\tctx.fillRect(x * gridSquareWidth, y * gridSquareWidth, gridSquareWidth, gridSquareWidth);\n  \t\t\t} else {\n          ctx.fillStyle = \"#009900\";\n          ctx.fillRect(x * gridSquareWidth, y * gridSquareWidth, gridSquareWidth, gridSquareWidth);\n        }\n  \t\t}\n  \t}\n  }\n\n  gameLoop() {\n      let lastTime = 0;\n      let now = Date.now();\n      let dt = (now - lastTime) / 1000.0;\n\n      this.update(dt);\n\n      lastTime = now;\n  \twindow.setTimeout(this.gameLoop, 50);\n  }\n\n  //calling gameLoop will start the game\n\n}\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/board.js\n// module id = 1\n// module chunks = 0","class Cell {\n  constructor(type, x, y){\n    this.type = type;\n    this.currentX = x;\n    this.currentY = y;\n  }\n}\n\nmodule.exports = Cell;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/cell.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}